{"version":3,"file":"withErrorMsg.js","sourceRoot":"","sources":["../../../src/utils/withErrorMsg.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,aAAa,EAAC,MAAM,YAAY,CAAC;AACzC,OAAO,EAAC,QAAQ,EAAC,MAAM,+BAA+B,CAAC;AAYvD,MAAM,UAAU,YAAY,CAC1B,QAAgB,EAChB,iBAA4B;IAE5B,MAAM,MAAM,GAAQ,EAAE,CAAC;IAEvB,OAAO,CAAC,CAAC,GAAG,gBAAuB,EAAE,EAAE;QACrC,MAAM,SAAS,GAAG,aAAa,CAAC,iBAAiB,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC;QACvE,SAAiB,CAAC,KAAK,GAAG,CAAC,OAAe,EAAE,EAAE;YAC7C,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;YACzB,OAAO,aAAa,CAAC,SAAS,EAAE,MAAM,CAAC,OAAO,IAAI,QAAQ,CAAC,EAAC,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAC,CAAC,CAAC,CAAC;QACrF,CAAC,CAAC;QAEF,OAAO,SAAS,CAAC;IACnB,CAAC,CAAQ,CAAC;AACZ,CAAC","sourcesContent":["import {useDecorators} from \"@tsed/core\";\nimport {ErrorMsg} from \"../decorators/common/errorMsg\";\n\nexport interface ErrorChainedMethods<T> {\n  <T>(target: Object, propertyKey?: string | symbol, descriptor?: TypedPropertyDescriptor<T> | number): any;\n\n  Error(msg: string): this;\n}\n\nexport type ErrorChainedDecorator<Decorator extends (...args: any[]) => any> = (\n  ...args: Parameters<Decorator>\n) => ErrorChainedMethods<Decorator>;\n\nexport function withErrorMsg<Decorator extends (...args: any[]) => any>(\n  errorKey: string,\n  originalDecorator: Decorator\n): ErrorChainedDecorator<Decorator> {\n  const schema: any = {};\n\n  return ((...decoratorOptions: any[]) => {\n    const decorator = useDecorators(originalDecorator(...decoratorOptions));\n    (decorator as any).Error = (message: string) => {\n      schema.message = message;\n      return useDecorators(decorator, schema.message && ErrorMsg({[errorKey]: message}));\n    };\n\n    return decorator;\n  }) as any;\n}\n"]}